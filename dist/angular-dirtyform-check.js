!function(){"use strict";angular.module("angularDirtyformCheck",[])}(),function(){"use strict";angular.module("angularDirtyformCheck").directive("dirtyCheck",["dirtyCheckService",function(t){function n(n,e,r,o){t.registerForm(o),n.$on("$destroy",function(){t.deregisterForm(o)})}return{require:"form",restrict:"A",link:n,scope:{}}}])}(),function(){"use strict";function t(){function t(t){e=t}function n(t,n,r,o){function i(t){$.push(t),1===$.length&&g()}function u(t){var n=$.indexOf(t);n!==-1&&$.splice(n,1),0===$.length&&d()}function c(){return $.some(function(t){return t.$dirty})}function a(){return n(function(n,r){var o=t.confirm(e);o?n():r()})}function s(t){if(c()){t.preventDefault();var n=f();n.then(function(){d(),r.navAway()})}}function f(){return v&&angular.isFunction(v.show)?v.show():a()}function h(){if(c())return e}function g(){l=r.subscribeStateChange(s),t.onbeforeunload=h}function d(){l(),t.onbeforeunload=null}var l,$=[],v=!!o.has("dirtyCheckDialog")&&o.get("dirtyCheckDialog");return{registerForm:i,deregisterForm:u,showPopup:f}}var e="Changes you made may not be saved. Leave anyway?";return n.$inject=["$window","$q","dirtyCheckRouter","$injector"],{$get:n,setDirtyMessage:t}}angular.module("angularDirtyformCheck").provider("dirtyCheckService",t)}(),function(){"use strict";function t(){function t(){if(n("ngRoute")&&(e.$inject=["$rootScope","$location"],r={subscribeStateChange:function(t){function n(n){this.toState=this.routingService.path(),t(n)}return this.$rootScope.$on("$routeChangeStart",n.bind(this))},navAway:function(){this.routingService.path(this.toState)}}),n("ui.router")&&(e.$inject=["$rootScope","$state"],r={subscribeStateChange:function(t){function n(n,e,r){this.toState=e,this.toParams=r,t(n)}return this.$rootScope.$on("$stateChangeStart",n.bind(this))},navAway:function(){this.routingService.go(this.toState,this.toParams)}}),!r)throw"Neither ngRoute nor ui.route module found"}function n(t){var n=!0;try{angular.module(t)}catch(t){n=!1}return n}function e(t,n){return r.$rootScope=t,r.routingService=n,r}var r;return t(),{$get:e}}angular.module("angularDirtyformCheck").provider("dirtyCheckRouter",t),t.$inject=[]}();
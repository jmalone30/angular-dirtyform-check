!function(){"use strict";angular.module("angularDirtyformCheck",[])}(),function(){"use strict";angular.module("angularDirtyformCheck").directive("dirtyCheck",["dirtyCheckService",function(t){function n(n,e,r,i){t.registerForm(i),n.$on("$destroy",function(){t.deregisterForm(i)})}return{require:"form",restrict:"A",link:n,scope:{}}}])}(),function(){"use strict";function t(){function t(t){e=t}function n(t,n,r,i){function o(t){l.push(t),1===l.length&&$()}function u(t){var n=l.indexOf(t);-1!==n&&l.splice(n,1),0===l.length&&g()}function c(){return l.some(function(t){return t.$dirty})}function a(){return n(function(n,r){t.confirm(e)?n():r()})}function s(t){if(c()){t.preventDefault();f().then(function(){g(),r.navAway()})}}function f(){return m&&angular.isFunction(m.show)?m.show():a()}function h(){if(c())return e}function $(){d=r.subscribeStateChange(s),t.onbeforeunload=h}function g(){d(),t.onbeforeunload=null}var d,l=[],m=!!i.has("dirtyCheckDialog")&&i.get("dirtyCheckDialog");return{registerForm:o,deregisterForm:u,showPopup:f}}var e="Changes you made may not be saved. Leave anyway?";return n.$inject=["$window","$q","dirtyCheckRouter","$injector"],{$get:n,setDirtyMessage:t}}angular.module("angularDirtyformCheck").provider("dirtyCheckService",t)}(),function(){"use strict";function t(){function t(t){var n=!0;try{angular.module(t)}catch(t){n=!1}return n}function n(t,n,r,i,o){return e.$rootScope=t,e.routingService=n,e.$q=i,e.$timeout=o,e.$transitions=r.has("$transitions")?r.get("$transitions"):void 0,e}var e;return function(){if(t("ngRoute")&&(n.$inject=["$rootScope","$location","$injector","$q","$timeout"],e={subscribeStateChange:function(t){function n(n){this.toState=this.routingService.path(),t(n)}return this.$rootScope.$on("$routeChangeStart",n.bind(this))},navAway:function(){this.routingService.path(this.toState)}}),t("ui.router")&&(n.$inject=["$rootScope","$state","$injector","$q","$timeout"],e={subscribeStateChange:function(t){function n(n,e,r){this.toState=e,this.toParams=r,t(n)}function e(n){this.toState=n.$to(),this.toParams=n.params();const e=this.$q.defer();return t(function(t,n){function e(){n.cancel(r),t.resolve(!1)}var r=n(function(){t.resolve()},0);return{preventDefault:e}}(e,this.$timeout)),e.promise}return this.$transitions?this.$transitions.onBefore({to:"**"},e.bind(this)):this.$rootScope.$on("$stateChangeStart",n.bind(this))},navAway:function(){this.routingService.go(this.toState,this.toParams)}}),!e)throw"Neither ngRoute nor ui.route module found"}(),{$get:n}}angular.module("angularDirtyformCheck").provider("dirtyCheckRouter",t),t.$inject=[]}();